<ZStack style={["background(Color.white)", "preferredColorScheme(.light)"]}>
  <VStack>
    <Text style="font(.largeTitle);fontWeight(.bold)">
      My Tasks
    </Text>
    <ScrollView>
      <VStack style="padding(16)">
        <%= if Enum.empty?(@todos) do %>
          <VStack style={[
            "padding(.vertical, 32)",
            "frame(maxWidth: .infinity)",
            "alignment(.center)"
          ]}>
            <.icon name="doc.text" style={[
              "font(.system(size: 48))",
              "foregroundStyle(.gray)"
            ]}/>
            <Text style={[
              "font(.headline)",
              "foregroundStyle(.gray)",
              "padding(.top, 8)"
            ]}>
              No tasks yet
            </Text>
            <Text style={[
              "font(.subheadline)",
              "foregroundStyle(.gray.opacity(0.8))",
              "padding(.top, 4)"
            ]}>
              Get started by creating a new task
            </Text>
          </VStack>
        <% else %>
          <%= for todo <- @todos do %>
            <HStack style={[
              "padding()",
              "background(Color(red: 0.95, green: 0.95, blue: 0.95))"
            ]}>
              <VStack>
                <ZStack style="frame(width: 20, height: 20)" phx-click="toggle" phx-value-id={todo.id}>
                  <Circle style={[
                    "fill(Color.gray)",
                    "frame(width: 20, height: 20)"
                  ]}/>
                  <%= if todo.completed do %>
                    <Circle style={[
                      "fill(Color.green)",
                      "frame(width: 20, height: 20)"
                    ]}/>
                    <.icon name="checkmark" style={[
                      "foregroundStyle(.white)",
                      "font(.system(size: 10))"
                    ]}/>
                  <% else %>
                    <Circle style={[
                      "fill(Color.white)",
                      "frame(width: 16, height: 16)"
                    ]}/>
                  <% end %>
                </ZStack>
                <Spacer/>
              </VStack>
              <VStack class={if todo.completed, do: "completed", else: "incomplete"} style={["padding(.leading, 8)"]}>
                <Text style={["font(.headline)", "frame(maxWidth: .infinity, alignment: .leading)"]}><%= todo.title %></Text>
                
                <HStack>
                  <Button 
                    :if={todo.image} 
                    show-image-detail={!!@image_modal_url} 
                    phx-click="open_image_detail"
                    phx-change="close_image_detail"
                    phx-value-url={todo.image}                  
                    style={[
                      ~s[sheet(isPresented: attr("show-image-detail"), content: :image_preview)]
                    ]}>
                    <.image url={todo.image}>
                      <:success style="resizable();frame(width: 40, height: 40)"/>                                       
                    </.image>
                    <VStack template="image_preview" style="frame(maxWidth: .infinity, maxHeight: .infinity)">
                      <Spacer/>
                      <.image url={@image_modal_url}>
                        <:success style={[
                          "resizable()",
                          "aspectRatio(contentMode: .fit)",
                          "frame(maxWidth: .infinity, maxHeight: .infinity)"
                        ]}/>                                       
                      </.image>
                      <Spacer/>
                    </VStack>                    
                  </Button>
                  <VStack>
                    <Text style={["font(.subheadline)", "foregroundStyle(.gray)", "frame(maxWidth: .infinity, alignment: .leading)"]} :if={todo.description}><%= todo.description %></Text>
                    <Spacer/>
                  </VStack>
                  <Spacer/>
                </HStack>
              </VStack>

              <Spacer/>
              <.button phx-click="delete" phx-value-id={todo.id}>
                <.icon name="trash" style="foregroundStyle(.gray)"/>
              </.button>
            </HStack>
          <% end %>        
        <% end %>
      </VStack>
    </ScrollView>
  </VStack>
  
  <VStack>
    <Spacer/>
    <HStack style="padding(.bottom, 16);padding(.horizontal, 16)">
      <Spacer/>
      <ZStack 
        style={[
          "frame(width: 56, height: 56)",
          "background(Color.blue)",
          "clipShape(.circle)",
          "shadow(radius: 4)",
          ~s[sheet(isPresented: attr("show-form"), content: :todo_form)]
        ]} 
        phx-click="open_form" 
        show-form={@show_form} 
        phx-change="close_form">
          <.icon name="plus" style={[
            "font(.title2)",
            "foregroundStyle(.white)"
          ]}/>       
          <VStack template="todo_form">
            <Text style="font(.title);fontWeight(.bold);padding(.bottom, 16)">
              New Task
            </Text>
            
            <.form for={@form} id="todo-form" phx-submit="save" phx-change="validate">
              <VStack>
                <.input field={@form[:title]} type="TextField" required label="Title"
                  style="textFieldStyle(.roundedBorder)"
                  placeholder="Enter task title..." />
                
                <.input field={@form[:description]} type="TextField" label="Description (optional)"
                  placeholder="Add some details..." />
                
                <%!-- <VStack>
                  <Text style="font(.subheadline)">Image (optional)</Text>
                  <HStack style={[
                    "frame(maxWidth: .infinity)",
                    "padding()",
                    "background(Color.gray.opacity(0.1))",
                  ]}>
                    <VStack>
                      <PhotosPicker
                        data-phx-upload-ref={@uploads.image.ref}
                        maxSelectionCount="1"
                        name="image"
                      >
                        <Label systemImage="photo.fill">Pick Photo</Label>
                      </PhotosPicker>                        
                    </VStack>
                  </HStack>
                </VStack>  --%>
                
                <HStack>
                  <.button phx-click="close_form" style={[
                    "padding()",
                    "background(Color.gray.opacity(0.1))",
                  ]}>
                    <Text>Cancel</Text>
                  </.button>
                  
                  <.button type="submit" style={[
                    "padding()",
                    "background(Color.blue)",
                  ]}>
                    <Text style="foregroundStyle(.white)">Save</Text>
                  </.button>
                </HStack>
              </VStack>
            </.form>
          </VStack>        
      </ZStack>
    </HStack>
  </VStack>
</ZStack>